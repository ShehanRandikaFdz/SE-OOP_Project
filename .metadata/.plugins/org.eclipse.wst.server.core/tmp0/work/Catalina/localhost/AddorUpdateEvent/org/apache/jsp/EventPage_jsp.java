/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.96
 * Generated at: 2024-10-19 23:07:17 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;
import eventPlanner.Event;

public final class EventPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(10);
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("java.sql.Connection");
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("eventPlanner.Event");
    _jspx_imports_classes.add("java.sql.PreparedStatement");
    _jspx_imports_classes.add("java.sql.DriverManager");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Event Page</title>\r\n");
      out.write("    <style>\r\n");
      out.write("        body {\r\n");
      out.write("            font-family: Arial, sans-serif;\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            padding: 0;\r\n");
      out.write("            background-image: url(\"images/background1.jpg\");\r\n");
      out.write("            background-repeat: no-repeat;\r\n");
      out.write("            background-size: cover;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        #event-header {\r\n");
      out.write("            background: linear-gradient(135deg, #FF4F81, #A500B5);\r\n");
      out.write("            color: white;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("            border-radius: 0 0 20px 20px;\r\n");
      out.write("            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        #event-header h1 {\r\n");
      out.write("            font-family: 'Poppins', sans-serif;\r\n");
      out.write("            font-size: 3rem;\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            text-transform: uppercase;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        #event-header p {\r\n");
      out.write("            font-family: 'Roboto', sans-serif;\r\n");
      out.write("            font-size: 1.2rem;\r\n");
      out.write("            margin-top: 10px;\r\n");
      out.write("            font-style: italic;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        #add-event-btn {\r\n");
      out.write("            position: fixed;\r\n");
      out.write("            top: 20px;\r\n");
      out.write("            right: 20px;\r\n");
      out.write("            background: linear-gradient(135deg, #FFD700, #FF8C00);\r\n");
      out.write("            color: black;\r\n");
      out.write("            border: none;\r\n");
      out.write("            padding: 12px 25px;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            border-radius: 30px;\r\n");
      out.write("            font-size: 18px;\r\n");
      out.write("            font-family: Nunito;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);\r\n");
      out.write("            transition: all 0.3s ease;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        #add-event-btn:hover {\r\n");
      out.write("            background: linear-gradient(135deg, #00BFFF, #00FF7F);\r\n");
      out.write("            transform: translateY(-3px);\r\n");
      out.write("            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.3);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        #event-list {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            flex-wrap: wrap;\r\n");
      out.write("            justify-content: space-around;\r\n");
      out.write("            margin: 40px 20px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .event-card {\r\n");
      out.write("            background-color: white;\r\n");
      out.write("            margin: 20px;\r\n");
      out.write("            border-radius: 15px;\r\n");
      out.write("            box-shadow: 0 6px 18px rgba(0, 0, 0, 0.1);\r\n");
      out.write("            width: 320px;\r\n");
      out.write("            overflow: hidden;\r\n");
      out.write("            transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .event-card:hover {\r\n");
      out.write("            transform: scale(1.05);\r\n");
      out.write("            box-shadow: 0 12px 24px rgba(0, 0, 0, 0.2);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .event-image {\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            height: 200px;\r\n");
      out.write("            background-size: cover;\r\n");
      out.write("            background-position: center;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .event-details {\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("            color: #2d3436;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .event-details h3 {\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            font-size: 1.6rem;\r\n");
      out.write("            color: #2d3436;\r\n");
      out.write("            font-weight: 600;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .event-details p {\r\n");
      out.write("            font-size: 0.95rem;\r\n");
      out.write("            margin: 10px 0;\r\n");
      out.write("            color: #636e72;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .event-details .event-type {\r\n");
      out.write("            display: inline-block;\r\n");
      out.write("            padding: 5px 10px;\r\n");
      out.write("            background-color: #e84393;\r\n");
      out.write("            color: white;\r\n");
      out.write("            font-size: 0.85rem;\r\n");
      out.write("            border-radius: 8px;\r\n");
      out.write("            margin-bottom: 15px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .event-details .event-description {\r\n");
      out.write("            font-size: 0.9rem;\r\n");
      out.write("            color: #636e72;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .event-details .more-info {\r\n");
      out.write("            color: #0984e3;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            font-weight: 600;\r\n");
      out.write("            display: inline-block;\r\n");
      out.write("            margin-top: 10px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .event-details .more-info:hover {\r\n");
      out.write("            text-decoration: underline;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Update and Delete Buttons */\r\n");
      out.write("        .event-details .action-btn {\r\n");
      out.write("            display: inline-block;\r\n");
      out.write("            margin: 10px 5px 0 0;\r\n");
      out.write("            padding: 8px 15px;\r\n");
      out.write("            border-radius: 20px;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            font-size: 0.9rem;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("            transition: background 0.3s ease, transform 0.3s ease;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .event-details .update-btn {\r\n");
      out.write("            background-color: #00b894;\r\n");
      out.write("            color: white;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .event-details .update-btn:hover {\r\n");
      out.write("            background-color: #00cec9;\r\n");
      out.write("            transform: translateY(-3px);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .event-details .delete-btn {\r\n");
      out.write("            background-color: #d63031;\r\n");
      out.write("            color: white;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .event-details .delete-btn:hover {\r\n");
      out.write("            background-color: #ff7675;\r\n");
      out.write("            transform: translateY(-3px);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Modal Styles */\r\n");
      out.write("        .modal {\r\n");
      out.write("            display: none;\r\n");
      out.write("            position: fixed;\r\n");
      out.write("            z-index: 1;\r\n");
      out.write("            left: 0;\r\n");
      out.write("            top: 0;\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            height: 100%;\r\n");
      out.write("            background-color: rgba(0, 0, 0, 0.5);\r\n");
      out.write("            overflow: auto;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .modal-content {\r\n");
      out.write("            background-color: white;\r\n");
      out.write("            margin: 10% auto;\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("            border: 1px solid #888;\r\n");
      out.write("            width: 60%;\r\n");
      out.write("            border-radius: 10px;\r\n");
      out.write("            box-shadow: 0px 10px 30px rgba(0, 0, 0, 0.3);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .modal-header h3 {\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            font-size: 2rem;\r\n");
      out.write("            color: #2d3436;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .modal-body p {\r\n");
      out.write("            margin: 10px 0;\r\n");
      out.write("            font-size: 1.1rem;\r\n");
      out.write("            color: #636e72;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .close {\r\n");
      out.write("            color: #aaa;\r\n");
      out.write("            float: right;\r\n");
      out.write("            font-size: 28px;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .close:hover,\r\n");
      out.write("        .close:focus {\r\n");
      out.write("            color: black;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div id=\"event-header\">\r\n");
      out.write("        <h1>Events</h1>\r\n");
      out.write("        <p>Explore Our Exciting Upcoming Events!</p>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <button id=\"add-event-btn\" onclick=\"window.location.href='addEvent.jsp'\">Add Event</button>\r\n");
      out.write("\r\n");
      out.write("    <div id=\"event-list\">\r\n");
      out.write("        ");

            Connection conn = null;
            PreparedStatement stmt = null;
            ResultSet resultSet = null;
            List<Event> eventList = new ArrayList<>();

            try {
                // Establish database connection
                Class.forName("com.mysql.cj.jdbc.Driver");
                conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/oeps", "root", "Shehan@24700");

                // SQL query to retrieve events
                String sql = "SELECT * FROM event_planner";
                stmt = conn.prepareStatement(sql);
                resultSet = stmt.executeQuery();

                // Loop through the results and add to the eventList
                while (resultSet.next()) {
                    int eventId = resultSet.getInt("event_id");
                    String eventType = resultSet.getString("event_type");
                    String eventVenue = resultSet.getString("event_venue");
                    String nop = resultSet.getString("nop");
                    String description = resultSet.getString("description");
                    String eventImagePath = resultSet.getString("event_image_path");

                    // Create an Event object and add it to the list
                    Event event = new Event(eventId, eventType, eventVenue, nop, description, eventImagePath);
                    eventList.add(event);
                }

                // Display events if available
                if (!eventList.isEmpty()) {
                    for (Event event : eventList) {
        
      out.write("\r\n");
      out.write("                        <div class=\"event-card\">\r\n");
      out.write("						    <div class=\"event-image\" style=\"background-image: url('uploads/");
      out.print( event.getEventImagePath() );
      out.write("');\"></div>\r\n");
      out.write("						    <div class=\"event-details\">\r\n");
      out.write("						        <h3>");
      out.print( event.getEventType() );
      out.write("</h3>\r\n");
      out.write("						        <span class=\"event-type\">");
      out.print( event.getEventType() );
      out.write("</span>\r\n");
      out.write("						        <p>Venue: ");
      out.print( event.getEventVenue() );
      out.write("</p>\r\n");
      out.write("						        <p>Participants: ");
      out.print( event.getNop() );
      out.write("</p>\r\n");
      out.write("						        <p class=\"event-description\">");
      out.print( event.getDescription().length() > 100 ? event.getDescription().substring(0, 100) + "..." : event.getDescription() );
      out.write("</p>\r\n");
      out.write("						        \r\n");
      out.write("						        <!-- More Info Button -->\r\n");
      out.write("						        <a href=\"javascript:void(0);\" class=\"more-info\" onclick=\"openModal('");
      out.print( event.getEventType() );
      out.write("', '");
      out.print( event.getEventVenue() );
      out.write("', '");
      out.print( event.getNop() );
      out.write("', '");
      out.print( event.getDescription() );
      out.write("', 'uploads/");
      out.print( event.getEventImagePath() );
      out.write("')\">More Info</a>\r\n");
      out.write("						        \r\n");
      out.write("						        <!-- Update Button -->\r\n");
      out.write("						        <a href=\"updateEvent.jsp?eventId=");
      out.print( event.getEventId() );
      out.write("\" class=\"action-btn update-btn\">Update</a>\r\n");
      out.write("						        \r\n");
      out.write("						        <!-- Delete Button -->\r\n");
      out.write("						        <a href=\"deleteEvent.jsp?eventId=");
      out.print( event.getEventId() );
      out.write("\" class=\"action-btn delete-btn\" onclick=\"return confirm('Are you sure you want to delete this event?');\">Delete</a>\r\n");
      out.write("						    </div>\r\n");
      out.write("						</div>\r\n");
      out.write("\r\n");
      out.write("        ");

                    }
                } else {
                    out.println("<p>No events found.</p>");
                }
            } catch (Exception e) {
                e.printStackTrace();
                out.println("<p>Error retrieving events.</p>");
            } finally {
                // Close database resources
                try {
                    if (resultSet != null) resultSet.close();
                    if (stmt != null) stmt.close();
                    if (conn != null) conn.close();
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <!-- Modal -->\r\n");
      out.write("    <div id=\"eventModal\" class=\"modal\">\r\n");
      out.write("        <div class=\"modal-content\">\r\n");
      out.write("            <span class=\"close\" onclick=\"closeModal()\">&times;</span>\r\n");
      out.write("            <div class=\"modal-header\">\r\n");
      out.write("                <h3 id=\"modalEventType\"></h3>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"modal-body\">\r\n");
      out.write("                <p><strong>Venue:</strong> <span id=\"modalEventVenue\"></span></p>\r\n");
      out.write("                <p><strong>Participants:</strong> <span id=\"modalEventNop\"></span></p>\r\n");
      out.write("                <p><strong>Description:</strong> <span id=\"modalEventDescription\"></span></p>\r\n");
      out.write("                <img id=\"modalEventImage\" style=\"width: 100%; border-radius: 10px;\" />\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <script>\r\n");
      out.write("        // Function to open the modal and populate event details\r\n");
      out.write("        function openModal(eventType, eventVenue, nop, description, imagePath) {\r\n");
      out.write("            document.getElementById('modalEventType').textContent = eventType;\r\n");
      out.write("            document.getElementById('modalEventVenue').textContent = eventVenue;\r\n");
      out.write("            document.getElementById('modalEventNop').textContent = nop;\r\n");
      out.write("            document.getElementById('modalEventDescription').textContent = description;\r\n");
      out.write("            document.getElementById('modalEventImage').src = imagePath;\r\n");
      out.write("            document.getElementById('eventModal').style.display = \"block\";\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Function to close the modal\r\n");
      out.write("        function closeModal() {\r\n");
      out.write("            document.getElementById('eventModal').style.display = \"none\";\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Close the modal when clicking outside of it\r\n");
      out.write("        window.onclick = function(event) {\r\n");
      out.write("            if (event.target == document.getElementById('eventModal')) {\r\n");
      out.write("                closeModal();\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
