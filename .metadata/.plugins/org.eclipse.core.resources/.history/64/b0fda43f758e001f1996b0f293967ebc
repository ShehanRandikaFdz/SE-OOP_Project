package eventPlanner;

import java.io.File;  
import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.annotation.MultipartConfig;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.Part;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;

@WebServlet("/updateEventServlet")
public class updateEventServlet extends HttpServlet {
    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        int eventId = Integer.parseInt(request.getParameter("event_id"));
        String eventType = request.getParameter("event_type");
        String eventVenue = request.getParameter("event_venue");
        String nop = request.getParameter("nop");
        String eventDescription = request.getParameter("event_description");
        Part eventImage = request.getPart("event_image");

        String imagePath = null;
        if (eventImage != null && eventImage.getSize() > 0) {
            String fileName = extractFileName(eventImage);
            String uploadDir = getServletContext().getRealPath("/uploads");
            File uploadDirFile = new File(uploadDir);
            if (!uploadDirFile.exists()) {
                uploadDirFile.mkdirs();
            }
            String savePath = uploadDir + File.separator + fileName;
            eventImage.write(savePath);
            imagePath = fileName;  // Store the file name to save in the database
        }

        try {
            updateEventInDatabase(eventId, eventType, eventVenue, nop, eventDescription, imagePath);
        } catch (SQLException e) {
            e.printStackTrace();
            response.getWriter().println("Error updating event in the database: " + e.getMessage());
            return;
        }

        // Redirect back to event page after successful update
        response.sendRedirect("EventPage.jsp");
    }

    private String extractFileName(Part part) {
        String contentDisp = part.getHeader("content-disposition");
        String[] items = contentDisp.split(";");
        for (String s : items) {
            if (s.trim().startsWith("filename")) {
                return s.substring(s.indexOf("=") + 2, s.length() - 1);
            }
        }
        return "";
    }

    private void updateEventInDatabase(int eventId, String eventType, String eventVenue, String nop, String eventDescription, String imagePath) throws SQLException {
        Connection conn = null;
        PreparedStatement stmt = null;

        try {
            conn = eventPlannerDBUtil.getConnection();

            String sql = "UPDATE event_planner SET event_type = ?, event_venue = ?, nop = ?, description = ?, event_image_path = ? WHERE event_id = ?";
            stmt = conn.prepareStatement(sql);
            stmt.setString(1, eventType);
            stmt.setString(2, eventVenue);
            stmt.setString(3, nop);
            stmt.setString(4, eventDescription);
            stmt.setString(5, imagePath);
            stmt.setInt(6, eventId);

            stmt.executeUpdate();
        } catch (SQLException e) {
            throw e;
        } finally {
            if (stmt != null) {
                stmt.close();
            }
            if (conn != null) {
                conn.close();
            }
        }
    }
}
